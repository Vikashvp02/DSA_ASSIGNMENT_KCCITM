                                                                  Q. Grading Students
                                                                 
                                                                 
#include <iostream>
#include<vector>
using namespace std;
int main() {

int n;
cin>>n;
int g;
vector<int>v(n);

for(int i = 0; i<n ; i++){
    cin>>v[i];
}

for(int i = 0; i<v.size(); i++){
    
    if(v[i]>=38){
    g = v[i]%5;
    
    if(g>=3){
    v[i] += 5-g;}
    }
}

for(int i = 0; i<n ; i++){
    cout<<v[i]<<endl;
}

    return 0;
}





                                                                        Q. Breaking The Records
                                                                        
                                                                        

#include <iostream>
#include<vector>
using namespace std;
int main() {
    
int n;
cin>>n;

vector<int>v(n);

for(int i =0;i<n;i++){
    cin>>v[i];
}
int max = v[0];
int min = v[0];
int max_count = 0;
int min_count = 0;

for(int i = 1; i<v.size(); i++){
    
    if(max<v[i]){
        max = v[i];
        max_count++;
    }
    
    if(min>v[i]){
        min = v[i];
        min_count++;
    }
}

cout<<max_count<<" "<<min_count;
    return 0;
}





                                                                    Q.Apple and Orange
                                                                    
                                                                    
// Online C++ compiler to run C++ program online
#include <iostream>
#include<vector>
using namespace std;
int main() {
    
int s,t,a,b,m,n;
// s = starting point of house
// t = end point of house
// a = apple location
// b - orange location
// m = number of apples drop
// n = number of oranges drop
cin>>s>>t;

cin>>a>>b;

cin>>m>>n;

vector<int>v1(m);
// vector<>v1 = gire hue apple ki location

vector<int>v2(n);
// vector<>v2 = gire hue orange ki location

for(int i =0; i<m ;i++){
    cin>>v1[i];
}

for(int i =0; i<n ;i++){
    cin>>v2[i];
}


// for(int i =0; i<m ;i++){
//     cout<<v1[i]<<" ";
// }
// cout<<endl;
// for(int i =0; i<n ;i++){
//     cout<<v2[i]<<" ";
// }

int apple_count = 0;
int orange_count = 0;

// for apples
for(int i =0; i<v1.size();i++){
    if( (a + v1[i] >= s) && (a + v1[i] <= t) ){
        apple_count++;
    }
}

// for oranges
for(int i =0; i<v2.size();i++){
    if( (b + v2[i] >= s) && (b + v2[i] <= t) ){
      orange_count++;
    }
}

cout<<apple_count<<endl<<orange_count;
    return 0;
}
   
   
   
   
   
                                                                 Q. Number Line Jumps
                                                                 
                                                                 
                                                                 
// Online C++ compiler to run C++ program online
#include <iostream>
#include<vector>
using namespace std;
int main() {
    
    int x1,v1,x2,v2;
    
    cin>>x1>>v1>>x2>>v2;
    int flag = 0;
    
    
    while(x1<100000000){
        
    x1 = x1+v1;
    x2 = x2+v2;
    
    if(x1 == x2){
            flag = 1;
             break;
    }
        
    }
    if(flag == 1){
        cout<<"YES";
    }
    else{
        cout<<"NO";
    }
    
    return 0;
}





                                                                  Q. Divisible Sum Pairs
                                                                  
                                                                  
                                                                  
// Online C++ compiler to run C++ program online
#include <iostream>
#include<vector>
using namespace std;
int main() {
    
    int n,k;
    cin>>n>>k;
    
    vector<int>v(n);
    
    for(int i =0; i<n ;i++){
        cin>>v[i];
    }
    
    int count = 0;
    for(int i = 0; i<v.size() ;i++){
        
        for(int j = i+1; j<v.size(); j++){
           if((v[i]+v[j])%k==0){
               count++;
           }
        }
    }
    
    cout<<count;
    return 0;
}                                                                  
